{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/components/SingleProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query SINGLE_ITEM_QUERY($id: ID!) {\\n        Product(where: {\\n            id: $id\\n        }){\\n            name\\n            price\\n            description\\n            id\\n            photo{\\n                image{\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this);\n  var Product = data.Product;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: Product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: Product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/components/SingleProduct.js"],"names":["gql","useQuery","SINGLE_ITEM_QUERY","SingleProduct","id","variables","data","loading","error","message","Product","name","description"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;AAkBA,eAAe,SAASG,aAAT,OAA8B;AAAA;;AAAA,MAALC,EAAK,QAALA,EAAK;;AAAA,kBAERH,QAAQ,CAACC,iBAAD,EAAoB;AAAEG,IAAAA,SAAS,EAAE;AAACD,MAAAA,EAAE,EAAFA;AAAD;AAAb,GAApB,CAFA;AAAA,MAEjCE,IAFiC,aAEjCA,IAFiC;AAAA,MAE3BC,OAF2B,aAE3BA,OAF2B;AAAA,MAElBC,KAFkB,aAElBA,KAFkB;;AAGzC,MAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,MAAGC,KAAH,EAAU,oBAAO;AAAA,cAAIA,KAAK,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,UAAP;AAJ+B,MAKjCC,OALiC,GAKrBJ,IALqB,CAKjCI,OALiC;AAOzC,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,kBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAID,OAAO,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAfuBT,a;UAEaF,Q;;;KAFbE,a","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: ID!) {\n        Product(where: {\n            id: $id\n        }){\n            name\n            price\n            description\n            id\n            photo{\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }\n`;\n\nexport default function SingleProduct({ id }){\n\n    const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, { variables: {id}});\n    if(loading) return <p>Loading...</p>\n    if(error) return <p>{error.message}</p>\n    const { Product } = data\n\n    return(\n        <div>\n            <div className='details'>\n                <h2>{Product.name}</h2>\n                <p>{Product.description}</p>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}