{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/components/Products.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    grid-gap: 60px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query ALL_PRODUCTS_QUERY{\\n        allProducts{\\n            id\\n\\t\\t    name\\n            price\\n            description\\n            photo{\\n                id\\n                image{\\n                    publicUrlTransformed\\n                }\\n            }\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloClient, useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsListStyles = styled.div(_templateObject2());\n_c = ProductsListStyles;\nexport default function Products() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log(data, error, loading);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.allProducts.map(function (product) {\n        return /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n          children: product.name\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 32\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProductsListStyles\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["/Users/ericsmith/Documents/courses/Advanced-React/sick-fits/frontend/components/Products.js"],"names":["ApolloClient","useQuery","gql","styled","ALL_PRODUCTS_QUERY","ProductsListStyles","div","Products","data","error","loading","console","log","message","allProducts","map","product","name","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,YAAR,EAAsBC,QAAtB,QAAqC,gBAArC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;AAgBA,IAAMG,kBAAkB,GAAGF,MAAM,CAACG,GAAV,oBAAxB;KAAMD,kB;AAMN,eAAe,SAASE,QAAT,GAAmB;AAAA;;AAAA;;AAAA,kBAEGN,QAAQ,CAACG,kBAAD,CAFX;AAAA,MAEtBI,IAFsB,aAEtBA,IAFsB;AAAA,MAEhBC,KAFgB,aAEhBA,KAFgB;AAAA,MAETC,OAFS,aAETA,OAFS;;AAG9BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB,EAAyBC,OAAzB;;AACA,MAAGA,OAAH,EAAW;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAIM,IAAGD,KAAH,EAAS;AACX,wBACI;AAAA,4BAAWA,KAAK,CAACI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJK,MAID;AACD,wBACI;AAAA,gBAEOL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,CAAqB,UAAAC,OAAO,EAAI;AAC3B,4BAAO,QAAC,kBAAD;AAAA,oBAAsCA,OAAO,CAACC;AAA9C,WAAyBD,OAAO,CAACE,EAAjC;AAAA;AAAA;AAAA;AAAA,iBAAP;AACJ,OAFD;AAFP;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ;;GAvBuBX,Q;UAEaN,Q;;;MAFbM,Q","sourcesContent":["import {ApolloClient ,useQuery} from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\nconst ALL_PRODUCTS_QUERY = gql`\n    query ALL_PRODUCTS_QUERY{\n        allProducts{\n            id\n\t\t    name\n            price\n            description\n            photo{\n                id\n                image{\n                    publicUrlTransformed\n                }\n            }\n        }\n    }`;\n\nconst ProductsListStyles = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 60px;\n`\n\nexport default function Products(){\n    \n    const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY);\n    console.log(data, error, loading);\n    if(loading){\n        return(\n            <p>...Loading</p>\n        )\n    }else if(error){\n        return(\n            <p>Error: {error.message}</p>\n        )\n    }else{\n        return(\n            <div>\n                {\n                   data.allProducts.map(product => {\n                        return <ProductsListStyles key={product.id}>{product.name}</ProductsListStyles>\n                   })\n                }\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}